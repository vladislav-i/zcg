var zcgApp = angular.module('website', ['ngRoute','firebase', 'ui.router', 'xeditable'])
  .config(function($stateProvider, $urlRouterProvider) {
    $stateProvider
      .state('home',{
        url: '/home',
        templateUrl:'partials/home.html'
      })
      .state('about', {
        url:'/about',
        views: {
          '': { templateUrl:'partials/about.html'},
          "workOrder@about": {
            templateUrl: 'partials/workOrder.html'
          }
        }
      })
      .state('inspection',{
        url: '/inspection',
        templateUrl:'partials/inspection.html'
      });
      $urlRouterProvider.otherwise('/home');
  });

function MainCtrl($scope, $firebaseArray, $firebaseObject) {
  //firebase
  var ref = new Firebase("https://zcg.firebaseio.com/ann");
  //display data
  $scope.data = $firebaseArray(ref);
  
  //add to todos
  $scope.addTodo = function() {
    //sending data to firebase
    var newPostRef = ref.push({
      text: $scope.formTodoText,
      done: false
    });
    // Get the unique ID generated by push()
    var postID = newPostRef.key();
    $scope.formTodoText = '';
  }

  //update data if checked or not
  $scope.checked = function(id) {
    var condition = id.done;

    if (condition) condition = false;
    else condition = true;

    var updatedTask ={
      text: id.text,
      done: condition
    }

    ref.child(id.$id).update(updatedTask);
  }

  //clear todo
  $scope.clearCompleted = function () {
    var length = $scope.data.length;
    for (var i=0; i<length; i++) {
      if($scope.data[i].done) ref.child($scope.data[i].$id).remove();
    }
  };

  //Daily Jobs
  var jobs = new Firebase("https://zcg.firebaseio.com/jobs");
  $scope.job = $firebaseArray(jobs);

  $scope.addJob = function() {
    var newjobRef = jobs.push({
      FirstName: $scope.firstName || 'first name',
      LastName: $scope.lastName || 'last name',
      Make:  $scope.make || 'Make',
      Model: $scope.model || 'Model'
    });
    // Get the unique ID generated by push()
    var jobID = newjobRef.key();
    $scope.firstName = $scope.model = $scope.lastName = $scope.make ='';
  };

  $scope.checkedJobs = function(id) {
    var jobs = new Firebase("https://zcg.firebaseio.com/jobs");
    var condition = id.Done.Done;

    if (condition) condition = false;
    else condition = true;

    var updatedDone ={
      Done: condition
    }

    jobs.child(id.$id).child("Done").update(updatedDone);
  }

  $scope.notStarted  = function(job) {
    if (job.Status === "notStarted") {
      return true;
    }
  }

  $scope.accessJob = function(job) {
    var id = job.$id;
    var updateJob = new Firebase("https://zcg.firebaseio.com/jobs/"+id);
    $scope.user = {
      'first': job.FirstName || '',
      'last': job.LastName || ''
    };
    $scope.currentJob = {
      first: job.FirstName || '',
      last: job.LastName || '',
      make:  job.Make || '',
      vin: job.vin || '',
      prodDate: job.prodDate || '',
      mileage: job.mileage || '',
      techName: job.techName || '',
      model: job.model || '',
      status: 'notStarted',
      Done: {
        Done: false
      },
      anyCodes: job.anyCodes || '', //testDrive
      bMaster: job.bMaster || '', //brakes
      fRotors: job.fRotors || '',
      rRotors: job.rRotors || '',
      fPads: job.fPads || '',
      rPads: job.rPads || '',
      bNotes: job.bNotes || '',
      sSprings: job.sSprings || '', //suspension
      fArms: job.fArms || '',
      fTires: job.fTires || '',
      rTires: job.rTires || '',
      rSus: job.rSus || '',
      efi: job.efi || '', //Engine Room
      coHoses: job.coHoses || '',
      psHoses: job.psHoses || '',
      fuelDampner: job.fuelDampner || '',
      valveCover: job.valveCover || '',
      driveBelts: job.driveBelts || '',
      coolantLevel: job.coolantLevel || '',
      oilLevel: job.oilLevel || '',
      battery: job.battery || '',
      loadTest: job.loadTest || '',
      cabinFilter: job.cabinFilter || '',
      tLeaks: job.tLeaks || '', //transmission
      clutchPedal: job.clutchPedal || '',
      clutchFluid: job.clutchFluid || '',
      interiorLights: job.interiorLights || '', //interior
      acSystem: job.acSystem || '',
      acDrain: job.acDrain || '',
      ventSwitch: job.ventSwitch || '',
      powerSeat: job.powerSeat || '',
      gasDoor: job.gasDoor || '',
      wiperWash: job.wiperWash || '',
      fBumper: job.fBumper || '',  //exterior
      fFenders: job.fFenders || '',
      doors: job.doors || '',
      rearQuarters: job.rearQuarters || '',
      rBumper: job.rBumper || '',
      misNotes: job.misNotes || '' //all notes
    }
    $scope.updateJob = function() {
      console.log($scope.currentJob);
      updateJob.update($scope.currentJob);
    }
  }

  ///- - - WORK ORDER - - -///

  //brake type min thickness
  $scope.brakeType = function(val) {
    if (val === "brembo") {
      $scope.fRotor = "Min thickness is 28.4 MM";
      $scope.rRotor = "Min thickness is 20.2 MM";
    } else {
      $scope.fRotor = "Min thickness is 22 MM";
      $scope.rRotor = "Min thickness is 14 MM";
    }
  }

}
